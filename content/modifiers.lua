--- ================
---  Card Modifiers
--- ================

SMODS.Atlas {
    key = "atlas_stickers",
    path = "stickers.png",
    px = 71,
    py = 95
}


SMODS.Sticker {
    key = 'egwork_trial_sticker',
    loc_txt = {
        name = 'Trial',
        text = {
            "Any custom joker",
            "generated by this card ",
            "will be {C:attention}perishable{}"
        },
        label = 'Trial Version'
    },
    sets = {},
    badge_colour = HEX('6db99a'),
    atlas = 'atlas_stickers',
    pos = { x = 0, y = 0 },
    calculate = function(self, card, context)
    end,
    rate = 0
}

SMODS.Sticker {
    key = 'egwork_pirated_sticker',
    loc_txt = {
        name = 'Pirated',
        text = {
            "{C:green}#1# in 3{} chance any custom",
            "joker generated by this ",
            "card will be {C:red}malware{}"
        },
        label = 'Pirated'
    },
    loc_vars = function(self, info_queue, card)
        return { vars = { (G.GAME and G.GAME.probabilities.normal or 1) } }
    end,
    sets = {},
    badge_colour = HEX('7c719f'),
    atlas = 'atlas_stickers',
    pos = { x = 1, y = 0 },
    calculate = function(self, card, context)
    end,
    rate = 0
}

SMODS.Sticker {
    key = 'egwork_malware_sticker',
    loc_txt = {
        name = 'Malware',
        text = {
            "{C:green}#1# in #2#{} chance",
            "to do nothing"
        },
        label = 'Malware'
    },
    loc_vars = function(self, info_queue, card)
        return { vars = { (G.GAME and G.GAME.probabilities.normal or 1), 2 } }
    end,
    sets = {
        Joker = true
    },
    badge_colour = HEX('d34040'),
    atlas = 'atlas_stickers',
    pos = { x = 2, y = 0 },
    calculate = function(self, card, context)
        if context.before and pseudorandom('malware') < (G.GAME and G.GAME.probabilities.normal or 1)/2 then
            SMODS.debuff_card(card, true, "egwork_malware")
        end
        if context.after then
            SMODS.debuff_card(card, false, "egwork_malware")
        end
    end,
    rate = 0
}